存储 闹钟事件占用2K RAM 和2K Flash。   RAM位于 RamStoreStartAddr    0x20005800  - 0x20005fff， Flash位于 FlashSectorAddr  0x1f800  - 1ffff 
其中 开始地址存储着  CfgInformation ，占用 16字节 ， 其次是 TimeCtrl 其首四字节为 TimeBlock数量以及标识变量
从20字节开始存储 闹钟事件 ， 同时最多可以存储507个Tick事件 或253个 Time事件 
但 Tick事件只能最大存储255个， 此时 time事件数量为 （507-Tick）/2 = 126个 

1 ：分类 闹钟事件从参数以及延迟时间上分为两大类 ：
  1 ： tick事件  延迟时间单位为0.25s ，最大取值范围为0.25- 63.75 s
       其可以包含一个16位的参数  
       占用 4字节
  2 ： time事件  延迟时间分为两部分 
       1 ： tick事件的延迟部分 [0.25-63.75]s
       2 :  一个0-65535 的分钟值 。
       延时时间为tick值 +分钟值 最大延迟值 45天
       其可以包含一个 32位的参数。
       占用8字节
  使用者需要根据所带参数的多少，以及延迟时间选择应该是用那种参数
  
从可以取值的事件上  时钟事件取值从 0x100开始 （Sig_Rtc_Stop） ，到 0x1ff 结束
实际存储时 仅使用 低8位存储，  最高一位 恒定为1 ，将在取事件时添加上去
   
  1 ： 普通事件 ：  处理方式， 延迟所规定的时间，然后 上报事件，然后跳转到顺序下一个事件
  2 ： 停止事件      Sig_Rtc_Stop ： 将序号归零，停止等待闹钟事件。 闹钟将不再响应任何事件 ，该事件为 tick事件
  3 ： 循环和跳转事件 Sig_Rtc_Jmp ： 该事件为time事件，其32位参数中那个第一个为 当延迟到达时将要跳转到那个事件，  第二个参数标识将跳转的事件是time事件（1）・ 或Tick事件（0）
                                     第三个参数为循环次数， 最大255 标识这个跳转需要进行的次数 ，   如果为0 则为绝对跳转 不计跳转次数
				     第四个参数为内部使用 需要固定为 0xff。 否则该事件无效，直接跳转到该事件顺序下一个事件
                                     循环与跳转事件 的特殊使用为跳转到其他事件（通常用于在Time事件和Tick事件之间跳转）此时 应设置 第三个参数为 0 ，第四个参数为ff
                                     其他方式为有限次数跳转，跳转规定次数后，顺序执行 ， 当下一次再执行到这个指令是又重新开始计算跳转次数 。
                                     注意 这个事件需要缓存中间数据， 如果过程中 重启等，当前循环次数将丢失 。
  
